apply plugin: 'com.android.application'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

android {
    signingConfigs {
        release {
            // for hiding passwords when pushing to VCS. these are defined in gradle.properties,
            // which is ignored by git
            try {
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
                storeFile file("$rootDir/keystore.jks")
                storePassword KEYSTORE_PASSWORD
            } catch (ex) {
                throw new InvalidUserDataException("You should define KEY_ALIAS, KEY_PASSWORD, and KEYSTORE_PASSWORD in gradle.properties.", ex)
            }
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zn.expirytracker"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }
    }
    flavorDimensions "version"
    productFlavors {
        free {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
        }
        paid {
            dimension "version"
            applicationIdSuffix ".paid"
            versionNameSuffix "-paid"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Multidex (for API less than 21)
    implementation "androidx.multidex:multidex:$multidexVersion"

    // Support libraries
    implementation "com.google.android.material:material:$androidxVersion"
    implementation "androidx.appcompat:appcompat:$androidxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.preference:preference:$androidxVersion"
    implementation "androidx.cardview:cardview:$androidxVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:$lifecycleVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Paging
    implementation "androidx.paging:paging-runtime:$pagingVersion"
    testImplementation "androidx.paging:paging-common:$pagingVersion"

    // Firebase core
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"

    // Firebase Realtime Database
    implementation "com.google.firebase:firebase-database:$firebaseRealtimeDbVersion"

    // Firebase Storage
    implementation "com.google.firebase:firebase-storage:$firebaseStorageVersion"

    // Firebase Cloud Firestore
//    implementation "com.google.firebase:firebase-firestore:$firebaseCloudFirestoreVersion"

    // Firebase Authentication
//    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiAuthVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseAuthVersion"

    // Firebase x Google AdMob
//    implementation "com.google.firebase:firebase-ads:$firebaseAdsVersion"

    // Firebase ML Kit
    implementation "com.google.firebase:firebase-ml-vision:$firebaseMlKitVersion"
    implementation "com.google.firebase:firebase-ml-vision-image-label-model:$firebaseMlKitVisionImageLabelModelVersion"

    // Firebase Job Dispatcher
    implementation "com.firebase:firebase-jobdispatcher:$firebaseJobDispatcherVersion"

    // Google Sign-in
    implementation "com.google.android.gms:play-services-auth:$googleAuthVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Moshi
//    implementation "com.squareup.moshi:moshi:$moshiVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakCanaryVersion"

    // MP Android Chart
    implementation "com.github.PhilJay:MPAndroidChart:$mpAndroidChartVersion"

    // Page Indicator View
    implementation "com.romandanylyk:pageindicatorview:$pageIndicatorViewVersion"

    // Rapid Floating Action Button
//    implementation "com.github.wangjiegulu:rfab:$rapidFabVersion"

    // Discrete ScrollView
//    implementation "com.yarolegovich:discrete-scrollview:$discreteScrollViewVersion"

    // Joda time
    implementation "joda-time:joda-time:$jodatimeVersion"

    // EasyPermissions
    implementation "pub.devrel:easypermissions:$easyPermissionsVersion"

    // Welcome intro
    implementation "com.stephentuso:welcome:$welcomeVersion"

    // OSS licensing
    implementation "com.google.android.gms:play-services-oss-licenses:$ossLicensesVersion"
}

apply plugin: 'com.google.gms.google-services'
